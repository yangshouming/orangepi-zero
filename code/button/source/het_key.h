/******************************************************************************\
**  版    权：深圳市和而泰智能控制股份有限公司所有（2020）
**  文件名称：het_key.h
**  功能描述：按键模块化程序，支持短按，长按，连发，组合等按键功能。
**  作    者：王斌<letlink@126.com>
**  日    期：2018-01-01
**  版    本：V0.0.1
**  变更记录：1.首次创建
\******************************************************************************/
#ifndef _HET_KEY_H
#define _HET_KEY_H
//------------------------------------------------------------------------------
#ifdef __cplusplus
extern "C" {
#endif
/******************************************************************************\
                             Includes
\******************************************************************************/
#include <stdio.h>
#include <stdint.h>
#include <wiringPi.h>
#include <unistd.h>
/******************************************************************************\
                          Macro definitions
\******************************************************************************/
//io宏定义
#define KEY0_DOWN_LEVEL               	0  // 根据原理图设计，KEY0按下时引脚为低电平，所以这里设置为0

//----------------------------------------------------------------------------------------
//HAL库函数方式读取IO

//----------------------------------------------------------------------------------------
////键值定义，KeyId
#define KEY_NONE                		0x0000 //无键按下
#define KEY_1                        	0X0001
//#define KEY0_HOT_WATER 					0x0001 //对应实体IO_KEY0
//#define KEY1_COLD_WATER					0x0002 //对应实体IO_KEY1
//#define KEY2_WRAM_WATER					0x0004 //对应实体IO_KEY2
//#define KEY3_BIND						0x0008 //对应实体IO_KEY3
//#define KEY1_KEY3_SET					0x000A //组合按键，同时按KEY1和KEY3
//#define KEY0_KEY2_ADMIN					0x0005 //组合按键，同时按KEY0和KEY2
//#define KEY0_KEY1_KEY2_TEST				0x0007 //组合按键，同时按KEY0,KEY1和KEY2
//----------------------------------------------------------------------------------------
//按键时间定义，如短按，长按，重复键
#define KEY_PRESSED_TMR               	(uint32_t)5    // 50   ms
#define KEY_DOWM_TMR                	(uint32_t)200  // 2000 ms 
#define KEY_UP_TMR                		(uint32_t)6	 // 60  ms
#define KEY_REPEAT_TMR                  (uint32_t)10	 // 100  ms
/******************************************************************************\
                         Typedef definitions
\******************************************************************************/
//按键状态定义
typedef enum
{
	KEY_STATE_INIT = 0,
	KEY_STATE_WOBBLE,
	KEY_STATE_DWON,
	KEY_STATE_WAITUP,
} TE_KEY_STATE;

//按键事件定义
typedef enum
{
	KEY_EVT_NULL    = 0x00,
	KEY_EVT_PRESSED = 0x01,
	KEY_EVT_DOWN    = 0x02,
	KEY_EVT_UP      = 0x04,
	KEY_EVT_REPEAT  = 0x08,
} TE_KEY_EVENT;

//按键属性结构体
typedef struct   
{ 
    uint8_t KeyState;                      // 按键状态         
    uint16_t KeyDwTmr;                     // 按键按下的时间
    uint32_t KeyCur;                       // 记录发生按键事件时的键值
	TE_KEY_EVENT KeyEvent;				   // 按键事件
} TS_KEY_INFO; 
/******************************************************************************\
                    Global variables and functions
\******************************************************************************/

/*
* 函数名称 : KEY_Init
* 功能描述 : 按键初始化函数
* 参    数 : NONE
* 返回值   : NONE
*/
/******************************************************************************/
extern void KEY_Init(void);
/******************************************************************************/  

/*
* 函数名称 : KeyDrv
* 功能描述 : 按键驱动函数,需放10ms的循环时间片中
* 参    数 : NONE
* 返回值   : NONE
*/
/******************************************************************************/
extern void KEY_Drv(void);
/******************************************************************************/  

/*
* 函数名称 : GetKey
* 功能描述 : 获取键值,返回值每一位代表一个按键按下，支持组合按键
* 参    数 : NONE
* 返回值   : 返回按键值
*/
/******************************************************************************/
extern uint32_t GetKey(void);
/******************************************************************************/  

/*
* 函数名称 : IsKey
* 功能描述 : 按键事件判断API
* 参    数 : KeyId:按键ID / KeyEvent:按键事件类型
* 返回值   : true:有KeyEvent事件发生 / fasle:无
*/
/******************************************************************************/
extern uint8_t IsKey(uint32_t KeyId, TE_KEY_EVENT KeyEvent);
/******************************************************************************/  
//------------------------------------------------------------------------------
#ifdef __cplusplus
}
#endif 
#endif
/******************************* End of File (H) ******************************/


